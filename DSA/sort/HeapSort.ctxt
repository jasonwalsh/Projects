#BlueJ class context
comment0.params=list
comment0.target=HeapSort(list.List)
comment1.params=
comment1.target=void\ sort()
comment2.params=root
comment2.target=void\ heapify(int)
comment2.text=\r\n\ in\ a\ list,\ the\ left\ child\ of\ position\ i\ is\ at\ 2i+1\r\n\ the\ right\ child\ is\ at\ 2i+2\r\n\ \r\n\ this\ makes\ a\ tree\ out\ of\ a\ list,\ NOT\ A\ HEAP\r\n\ heapify\ makes\ that\ tree\ into\ a\ heap\r\n\ ...its\ not\ really\ a\ tree\ either,\ but\ whatever\r\n\ \r\n\ for\ example\r\n\ we\ have\ a\ list\ \r\n\ 5\ 10\ 3\ 2\ 0\ 1\ 4\ 8\ 6\r\n\ our\ "tree"\ would\ look\ like\r\n\ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ 5\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ /\ \\\ \ \ \ \ \r\n\ \ \ \ \ \ \ \ \ \ \ \ 10\ \ 3\r\n\ \ \ \ \ \ \ \ \ \ \ /\ \\\ \ /\\\r\n\ \ \ \ \ \ \ \ \ \ 2\ \ 0\ 1\ \ 4\r\n\ \ \ \ \ \ \ \ \ \ /\\\r\n\ \ \ \ \ \ \ \ \ 8\ \ 6\r\n
comment3.params=root\ max
comment3.target=void\ percDown(int,\ int)
comment4.params=x\ y
comment4.target=void\ swap(int,\ int)
comment5.params=root\ max
comment5.target=int\ biggerChild(int,\ int)
comment6.params=i\ j
comment6.target=boolean\ greater(int,\ int)
numComments=7
