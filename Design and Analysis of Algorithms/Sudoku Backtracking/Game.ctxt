#BlueJ class context
comment0.params=board\ width\ height\ count
comment0.target=Game(int[][],\ int,\ int,\ int)
comment1.params=tempCell
comment1.target=void\ setPossValues(cellInfo)
comment10.params=tempCell
comment10.target=void\ checkSingleCol(cellInfo)
comment2.params=i
comment2.target=boolean\ Solve(int)
comment3.params=count\ cellsRow\ cellsCol
comment3.target=void\ createEmptyCells(int,\ java.util.ArrayList,\ java.util.ArrayList)
comment4.params=
comment4.target=boolean\ check()
comment4.text=\r\n\ Checks\ the\ current\ temp\ board\ for\ correctness\ by\ checking\ each\ row,\ column,\ and\ box\ for\ duplicates,\ in\ that\ order.\ \r\n\ \r\n\ @param\ theBoard\ the\ board\ we\ are\ checking\ \r\n\ @return\ true\ if\ the\ board\ is\ correct\r\n
comment5.params=boxIndex
comment5.target=boolean\ checkBox(int)
comment5.text=\r\n\ checks\ each\ individual\ "box"\ for\ duplicates.\ This\ method\ works\ by\ iterating\ over\ the\ width\ and\ height\ of\ each\ box,\ starting\ with\ the\ upperleft\ most\ box,\ moving\ down\r\n\ through\ the\ left\ column\ of\ boxes.\ Once\ we\ hit\ the\ bottomleft\ most\ box,\ we\ move\ back\ up\ to\ the\ top\ and\ over\ to\ the\ next\ column\ to\ the\ right.\ We\ continue\ until\ we\ reach\ the\r\n\ bottom\ right\ most\ box.\r\n\ \r\n\ @param\ boxIndex\ starting\ position\ for\ checking\ the\ boxes\ in\ a\ specified\ column\ of\ boxes\r\n\ @return\ true\ if\ the\ boxes\ do\ not\ have\ duplicates\r\n
comment6.params=
comment6.target=boolean\ checkRow()
comment7.params=
comment7.target=boolean\ checkColumn()
comment8.params=tempCell
comment8.target=void\ checkSingleBox(cellInfo)
comment8.text=\r\n\ checks\ the\ box\ that\ the\ blank\ resides\ in\r\n
comment9.params=tempCell
comment9.target=void\ checkSingleRow(cellInfo)
numComments=11
