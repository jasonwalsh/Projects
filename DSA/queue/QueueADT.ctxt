#BlueJ class context
comment0.params=value
comment0.target=void\ add(java.lang.Object)
comment0.text=\r\n\ add\ a\ value\ to\ the\ end(back)\ of\ the\ queue\r\n
comment1.params=
comment1.target=java.lang.Object\ remove()
comment1.text=\r\n\ remove\ the\ value\ at\ the\ front\ of\ the\ queue\r\n\ @return\ the\ value\ that\ is\ removed\r\n\ @Pre\ the\ queue\ is\ not\ empty\r\n
comment2.params=
comment2.target=java.lang.Object\ peek()
comment2.text=\r\n\ return\ the\ value\ at\ the\ front\ of\ this\ queue\r\n\ @return\ the\ value\ at\ the\ front\ of\ the\ queue\r\n
comment3.params=
comment3.target=int\ size()
comment3.text=\r\n\ returns\ the\ size\ if\ this\ queue\r\n\ @return\ the\ size\ of\ the\ queue\r\n
comment4.params=
comment4.target=void\ removeAll()
comment4.text=\r\n\ removes\ all\ elements\ from\ the\ stack\r\n\ @return\ void\r\n
comment5.params=object
comment5.target=boolean\ equals(java.lang.Object)
comment5.text=\r\n\ returns\ true\ if\ this\ queue\ equals\ the\ other\ queue\ \r\n\ @param\ the\ other\ queue\r\n\ @returns\ true\ if\ the\ other\ queue\ equals\ this\ queue\r\n
comment6.params=
comment6.target=java.lang.String\ toString()
comment6.text=\r\n\ returns\ the\ string\ representation\ of\ this\ queue\r\n\ @returns\ this\ queue\ as\ a\ string\r\n
comment7.params=
comment7.target=boolean\ isEmpty()
comment7.text=\r\n\ tells\ us\ whether\ or\ not\ the\ queue\ is\ empty\r\n\ @return\ true\ if\ the\ queue\ is\ empty,\ otherwise\ returns\ false\r\n
numComments=8
